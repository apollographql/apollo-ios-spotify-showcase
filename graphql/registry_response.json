{"data":{"service":{"variant":{"activeSchemaPublish":{"schema":{"document":"directive @synthetics(\n  \"\"\"The synthetic timeout configured for the field.\"\"\"\n  timeout: Int\n\n  \"\"\"The synthetic error rate configured for the field.\"\"\"\n  errorRate: ErrorRate\n\n  \"\"\"Enable or disable synthetics for the field.\"\"\"\n  enabled: Boolean = true\n) on FIELD\n\ndirective @defer(label: String, if: Boolean! = true) on FRAGMENT_SPREAD | INLINE_FRAGMENT\n\nenum Action {\n  INTERRUPTING_PLAYBACK\n  PAUSING\n  RESUMING\n  SEEKING\n  SKIPPING_NEXT\n  SKIPPING_PREV\n  TOGGLING_REPEAT_CONTEXT\n  TOGGLING_SHUFFLE\n  TOGGLING_REPEAT_TRACK\n  TRANSFERRING_PLAYBACK\n}\n\ntype Actions {\n  disallows: [Action!]!\n}\n\ninput AddItemsToPlaylistInput {\n  \"\"\"\n  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  of the playlist.\n  \"\"\"\n  playlistId: ID!\n\n  \"\"\"\n  A comma-separated list of [Spotify URIs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  to add, can be track or episode URIs. A maximum of 100 items can be added in\n  one request.\n  \"\"\"\n  uris: [String!]!\n\n  \"\"\"\n  The position to insert the items, a zero-based index. For example, to insert\n  the items in the first position: **position=0**; to insert the items in the\n  third position: **position=2**. If omitted, the items will be appended to the\n  playlist. Items are added in the order they are listed in the query string or\n  request body.\n  \"\"\"\n  position: Int\n}\n\ntype AddItemsToPlaylistPayload {\n  \"\"\"The playlist that contains the newly added items\"\"\"\n  playlist: Playlist\n}\n\ninput AddItemToPlaybackQueueInput {\n  \"\"\"\n  The uri of the item to add to the queue. Must be a track or an episode uri.\n  \"\"\"\n  uri: String!\n\n  \"\"\"\n  The id of the device this command is targeting. If not supplied, the user's\n  currently active device is the target.\n  \"\"\"\n  deviceId: ID\n}\n\ntype AddItemToPlaybackQueuePayload {\n  playbackQueue: PlaybackQueue\n}\n\n\"\"\"Spotify catalog information for an album.\"\"\"\ntype Album {\n  \"\"\"The type of the album.\"\"\"\n  albumType: AlbumType!\n\n  \"\"\"The artists of the album.\"\"\"\n  artists: [Artist!]!\n\n  \"\"\"The copyrights for the album.\"\"\"\n  copyrights: [Copyright!]!\n\n  \"\"\"Known external URLs for this album.\"\"\"\n  externalUrls: ExternalUrl!\n\n  \"\"\"Genres for the album.\"\"\"\n  genres: [String!]!\n\n  \"\"\"A link to the Web API endpoint providing full details of the album.\"\"\"\n  href: String!\n\n  \"\"\"\n  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the album.\n  \"\"\"\n  id: ID!\n\n  \"\"\"The cover art for the album in various sizes, widest first.\"\"\"\n  images: [Image!]!\n\n  \"\"\"The label the album was released under.\"\"\"\n  label: String\n\n  \"\"\"\n  The name of the album. In case of an album takedown, the value may be an empty\n  string.\n  \"\"\"\n  name: String!\n\n  \"\"\"The date the album was first released.\"\"\"\n  releaseDate: ReleaseDate!\n\n  \"\"\"The number of tracks in the album.\"\"\"\n  totalTracks: Int!\n\n  \"\"\"The tracks of the album.\"\"\"\n  tracks(\n    \"\"\"\n    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n\n    \"\"\"\n    The index of the first playlist to return. Default: 0 (the first object).\n    \n    Use with `limit` to get the next set of tracks.\n    \"\"\"\n    offset: Int\n  ): AlbumTrackConnection\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the album.\n  \"\"\"\n  uri: String!\n}\n\nenum AlbumGroup {\n  ALBUM\n  SINGLE\n  APPEARS_ON\n  COMPILATION\n}\n\ntype AlbumTrackConnection {\n  \"\"\"The set of tracks.\"\"\"\n  edges: [AlbumTrackEdge!]!\n\n  \"\"\"Pagination information for the set of tracks.\"\"\"\n  pageInfo: PageInfo!\n}\n\ntype AlbumTrackEdge {\n  \"\"\"The track on the album\"\"\"\n  node: Track!\n}\n\nenum AlbumType {\n  ALBUM\n  SINGLE\n  COMPILATION\n}\n\n\"\"\"Spotify catalog information for an artist.\"\"\"\ntype Artist {\n  \"\"\"Spotify catalog information about an artist's albums.\"\"\"\n  albums(\n    \"\"\"\n    Used to filter the response. If not supplied, all album types will be\n    returned.\n    \"\"\"\n    includeGroups: [AlbumGroup!]\n\n    \"\"\"\n    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n\n    \"\"\"\n    The index of the first item to return. Default: 0 (the first item). Use\n    with `limit` to get the next set of items.\n    \"\"\"\n    offset: Int\n  ): ArtistAlbumsConnection\n\n  \"\"\"Known external URLs for this artist.\"\"\"\n  externalUrls: ExternalUrl!\n\n  \"\"\"Information about the followers of the artist.\"\"\"\n  followers: Followers!\n\n  \"\"\"\n  A list of the genres the artist is associated with. If not yet classified, the\n  array is empty.\n  \"\"\"\n  genres: [String!]!\n\n  \"\"\"A link to the Web API endpoint providing full details of the artist.\"\"\"\n  href: String!\n\n  \"\"\"\n  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the artist.\n  \"\"\"\n  id: ID!\n\n  \"\"\"Images of the artist in various sizes, widest first.\"\"\"\n  images: [Image!]!\n\n  \"\"\"The name of the artist.\"\"\"\n  name: String!\n\n  \"\"\"\n  The popularity of the artist. The value will be between 0 and 100, with 100\n  being the most popular. The artist's popularity is calculated from the\n  popularity of all the artist's tracks.\n  \"\"\"\n  popularity: Int!\n\n  \"\"\"\n  Spotify catalog information about artists similar to a given artist.\n  Similarity is based on analysis of the Spotify community's\n  [listening history](http://news.spotify.com/se/2010/02/03/related-artists/).\n  \"\"\"\n  relatedArtists: [Artist!]!\n\n  \"\"\"Spotify catalog information about an artist's top tracks.\"\"\"\n  topTracks: [Track!]!\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the artist.\n  \"\"\"\n  uri: String!\n}\n\ntype ArtistAlbumEdge {\n  \"\"\"Spotify catalog information for the album.\"\"\"\n  node: Album!\n}\n\ntype ArtistAlbumsConnection {\n  \"\"\"A list of albums that belong to the artist.\"\"\"\n  edges: [ArtistAlbumEdge!]\n\n  \"\"\"\n  \"Pagination information for the set of albums\"\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\ntype Contains {\n  \"\"\"\n  List of booleans in order of albums requested. `true` means the album is in\n  the Spotify user's library. This field is `null` if omitted in the request.\n  \"\"\"\n  albums: [Boolean!]\n\n  \"\"\"\n  List of booleans in order of episodes requested. `true` means the episode is in\n  the Spotify user's library. This field is `null` if omitted in the request.\n  \"\"\"\n  episodes: [Boolean!]\n\n  \"\"\"\n  List of booleans in order of shows requested. `true` means the show is in\n  the Spotify user's library. This field is `null` if omitted in the request.\n  \"\"\"\n  shows: [Boolean!]\n\n  \"\"\"\n  List of booleans in order of tracks requested. `true` means the track is in\n  the Spotify user's library. This field is `null` if omitted in the request.\n  \"\"\"\n  tracks: [Boolean!]\n}\n\ntype Copyright {\n  \"\"\"The copyright text for this content.\"\"\"\n  text: String!\n\n  \"\"\"\n  The type of copyright: `C` = the copyright, `P` = the sound recording\n  (performance) copyright.\n  \"\"\"\n  type: CopyrightType\n}\n\nenum CopyrightType {\n  \"\"\"The copyright\"\"\"\n  C\n\n  \"\"\"The sound recording (performance) copyright.\"\"\"\n  P\n}\n\nscalar CountryCode\n\ntype CurrentlyPlaying {\n  \"\"\"\n  Allows to update the user interface based on which playback actions are\n  available within the current context.\n  \"\"\"\n  actions: Actions!\n\n  \"\"\"A context object.\"\"\"\n  context: PlaybackContext\n\n  \"\"\"If something is currently playing, return `true`.\"\"\"\n  isPlaying: Boolean!\n\n  \"\"\"The currently playing track or episode\"\"\"\n  item: PlaybackItem\n\n  \"\"\"Progress into the currently playing track or episode. Can be `null`\"\"\"\n  progressMs: Int\n\n  \"\"\"Unix Millisecond Timestamp when data was fetched.\"\"\"\n  timestamp: Timestamp!\n}\n\ntype CurrentUser {\n  \"\"\"\n  Get a list of the albums saved in the current Spotify user's 'Your Music'\n  library.\n  \"\"\"\n  albums(\n    \"\"\"\n    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n\n    \"\"\"\n    The index of the first item to return. Default: 0 (the first item). Use with\n    limit to get the next set of items.\n    \"\"\"\n    offset: Int\n  ): SavedAlbumsConnection\n\n  \"\"\"\n  Check if one or more albums is already saved in the current Spotify user's\n  'Your Music' library.\n  \"\"\"\n  albumsContains(\n    \"\"\"\n    A comma-separated list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n    for the albums. Maximum: 20 IDs.\n    \"\"\"\n    ids: [ID!]!\n  ): [Boolean!]\n  episodes(\n    \"\"\"\n    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n\n    \"\"\"\n    The index of the first item to return. Default: 0 (the first item). Use with `limit` to get the next set of items.\n    \"\"\"\n    offset: Int\n  ): SavedEpisodesConnection\n\n  \"\"\"\n  Check if one or more episodes is already saved in the current Spotify user's\n  'Your Episodes' library.\n  \"\"\"\n  episodesContains(\n    \"\"\"\n    A comma-separated list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n    for the episodes. Maximum: 50 IDs.\n    \"\"\"\n    ids: [ID!]!\n  ): [Boolean!]\n\n  \"\"\"Get the current user's followed artists.\"\"\"\n  followedArtists(\n    \"\"\"The last artist ID retrieved from the previous request.\"\"\"\n    after: String\n\n    \"\"\"\n    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n  ): FollowedArtistsConnection\n\n  \"\"\"Detailed profile information about the current user.\"\"\"\n  user: User! @deprecated(reason: \"Use the profile field instead which provides richer current user information.\")\n\n  \"\"\"Information about the user's current playback state\"\"\"\n  player: Player!\n\n  \"\"\"Playlists owned or followed by the current Spotify user.\"\"\"\n  playlists(\n    \"\"\"\n    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n\n    \"\"\"\n    The index of the first playlist to return. Default: 0 (the first object).\n    \n    Use with `limit` to get the next set of playlists.\n    \"\"\"\n    offset: Int\n  ): PlaylistConnection\n\n  \"\"\"\n  Get detailed profile information about the current user (including the current user's username).\n  \"\"\"\n  profile: CurrentUserProfile!\n\n  \"\"\"\n  Get a list of the albums saved in the current Spotify user's 'Your Music' library.\n  \"\"\"\n  shows(\n    \"\"\"\n    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n\n    \"\"\"\n    The index of the first item to return. Default: 0 (the first item). Use with `limit` to get the next set of items.\n    \"\"\"\n    offset: Int\n  ): SavedShowsConnection\n\n  \"\"\"\n  Check if one or more shows is already saved in the current Spotify user's\n  library.\n  \"\"\"\n  showsContains(\n    \"\"\"\n    A comma-separated list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n    for the shows. Maximum: 50 IDs.\n    \"\"\"\n    ids: [ID!]!\n  ): [Boolean!]\n\n  \"\"\"Get the current user's top artists based on calculated affinity.\"\"\"\n  topArtists(\n    \"\"\"\n    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n\n    \"\"\"\n    The index of the first item to return. Default: 0 (the first item). Use with limit to get the next set of items.\n    \"\"\"\n    offset: Int\n\n    \"\"\"\n    Over what time frame the affinities are computed. Valid values: `LONG_TERM` (calculated from several years of data and including all new data as it becomes available), `MEDIUM_TERM` (approximately last 6 months), `SHORT_TERM` (approximately last 4 weeks). Default: `MEDIUM_TERM`\n    \"\"\"\n    timeRange: TimeRange\n  ): TopArtistsConnection\n\n  \"\"\"Get the current user's top tracks based on calculated affinity.\"\"\"\n  topTracks(\n    \"\"\"\n    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n\n    \"\"\"\n    The index of the first item to return. Default: 0 (the first item). Use with limit to get the next set of items.\n    \"\"\"\n    offset: Int\n\n    \"\"\"\n    Over what time frame the affinities are computed. Valid values: `LONG_TERM` (calculated from several years of data and including all new data as it becomes available), `MEDIUM_TERM` (approximately last 6 months), `SHORT_TERM` (approximately last 4 weeks). Default: `MEDIUM_TERM`\n    \"\"\"\n    timeRange: TimeRange\n  ): TopTracksConnection\n  tracks(\n    \"\"\"\n    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n\n    \"\"\"\n    The index of the first track to return. Default: 0 (the first object).\n    \n    Use with `limit` to get the next set of tracks.\n    \"\"\"\n    offset: Int\n  ): SavedTracksConnection\n\n  \"\"\"\n  Check if one or more tracks is already saved in the current Spotify user's\n  'Your Music' library.\n  \"\"\"\n  tracksContains(\n    \"\"\"\n    A comma-separated list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n    for the tracks. Maximum: 50 IDs.\n    \"\"\"\n    ids: [ID!]!\n  ): [Boolean!]\n}\n\ntype CurrentUserProfile implements UserProfile {\n  \"\"\"\n  The country of the user, as set in the user's account profile. An ISO 3166-1\n  alpha-2 country code.\n  \"\"\"\n  country: CountryCode\n\n  \"\"\"The name displayed on the user's profile. `null` if not available.\"\"\"\n  displayName: String\n\n  \"\"\"\n  The user's email address, as entered by the user when creating their account.\n  _**Important!** This email address is unverified; there is no proof that it\n  actually belongs to the user._\n  \"\"\"\n  email: String!\n\n  \"\"\"The user's explicit content settings.\"\"\"\n  explicitContent: ExplicitContentSettings!\n\n  \"\"\"Information about the followers of the user.\"\"\"\n  followers: Followers!\n\n  \"\"\"A link to the Web API endpoint for this user.\"\"\"\n  href: String!\n\n  \"\"\"\n  The [Spotify user ID](https://developer.spotify.com/documentation/web-api/concepts/spotify-uris-ids)\n  for the user.\n  \"\"\"\n  id: ID!\n\n  \"\"\"The user's profile image.\"\"\"\n  images: [Image!]\n\n  \"\"\"\n  The user's Spotify subscription level: \"premium\", \"free\", etc. (The\n  subscription level \"open\" can be considered the same as \"free\".)\n  \"\"\"\n  product: String!\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/concepts/spotify-uris-ids)\n  for the user.\n  \"\"\"\n  uri: String!\n}\n\ntype Cursors {\n  \"\"\"The cursor to use as key to find the next page of items.\"\"\"\n  after: String\n\n  \"\"\"The ursor to use as key to find the previous page of items.\"\"\"\n  before: String\n}\n\nscalar DateTime\n\ntype Developer {\n  \"\"\"\n  A list of configured GraphQL fields. Only fields that have non-zero timeouts\n  and error rates will be listed.\n  \"\"\"\n  fieldConfigs: [FieldConfig!]!\n}\n\ntype Device {\n  \"\"\"The device ID\"\"\"\n  id: ID\n\n  \"\"\"If this device is the currently active device.\"\"\"\n  isActive: Boolean!\n\n  \"\"\"If this device is currently in a private session.\"\"\"\n  isPrivateSession: Boolean!\n\n  \"\"\"\n  Whether controlling this device is restricted. At present if this is \"true\",\n  then no Web API commands will be accepted by this device.\n  \"\"\"\n  isRestricted: Boolean!\n\n  \"\"\"\n  A human-readable name for the device. Some devices have a name that the user\n  can configure (e.g. \"Loudest speaker\") and some devices have a generic name\n  associated with the manufacturer or device model.\n  \"\"\"\n  name: String!\n\n  \"\"\"Device type, such as \"computer\", \"smartphone\" or \"speaker\".\"\"\"\n  type: String!\n\n  \"\"\"\n  The current volume in percent.\n  \n  >= 0    <= 100\n  \"\"\"\n  volumePercent: Int!\n}\n\n\"\"\"Spotify catalog information for an episode.\"\"\"\ntype Episode implements PlaylistTrack & PlaybackItem {\n  \"\"\"\n  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the episode.\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  A URL to a 30 second preview (MP3 format) of the episode. `null` if not available.\n  \"\"\"\n  audioPreviewUrl: String\n\n  \"\"\"A description of the episode\"\"\"\n  description(format: TextFormat = PLAIN): String!\n\n  \"\"\"The episode length in milliseconds.\"\"\"\n  durationMs: Int!\n\n  \"\"\"\n  Whether or not the episode has explicit content (`true` = yes it does;\n  `false` = no it does not OR unknown).\n  \"\"\"\n  explicit: Boolean!\n\n  \"\"\"External URLs for this episode.\"\"\"\n  externalUrls: ExternalUrl!\n\n  \"\"\"A link to the Web API endpoint providing full details of the episode.\"\"\"\n  href: String!\n\n  \"\"\"The cover art for the episode in various sizes, widest first.\"\"\"\n  images: [Image!]!\n\n  \"\"\"`true` if the episode is hosted outside of Spotify's CDN.\"\"\"\n  isExternallyHosted: Boolean!\n\n  \"\"\"\n  `true` if the episode is playable in the given market. Otherwise `false`.\n  \"\"\"\n  isPlayable: Boolean!\n\n  \"\"\"\n  A list of the languages used in the episode, identified by their\n  [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639) code.\n  \"\"\"\n  languages: [String!]!\n\n  \"\"\"The name of the episode.\"\"\"\n  name: String!\n\n  \"\"\"The date the episode was first released\"\"\"\n  releaseDate: ReleaseDate!\n\n  \"\"\"The user's most recent position in the episode.\"\"\"\n  resumePoint: ResumePoint!\n\n  \"\"\"The show containing the episode.\"\"\"\n  show: Show!\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the episode.\n  \"\"\"\n  uri: String!\n}\n\nscalar ErrorRate\n\ntype ExplicitContentSettings {\n  \"\"\"When `true`, indicates that explicit content should not be played.\"\"\"\n  filterEnabled: Boolean!\n\n  \"\"\"\n  When `true`, indicates that the explicit content setting is locked and can't\n  be changed by the user.\n  \"\"\"\n  filterLocked: Boolean!\n}\n\ntype ExternalUrl {\n  \"\"\"\n  The [Spotify URL](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the object.\n  \"\"\"\n  spotify: String\n}\n\ntype FeaturedPlaylistConnection {\n  message: String!\n\n  \"\"\"\n  A list of Spotify featured playlists (shown, for example, on a Spotify player's\n  'Browse' tab).\n  \"\"\"\n  edges: [FeaturedPlaylistEdge!]!\n\n  \"\"\"Pagination information for the set of playlists\"\"\"\n  pageInfo: PageInfo!\n}\n\ntype FeaturedPlaylistEdge {\n  node: Playlist!\n}\n\ntype FieldConfig {\n  \"\"\"The schema field that includes this config\"\"\"\n  schemaField: SchemaField!\n\n  \"\"\"The synthetic timeout configured for the field.\"\"\"\n  timeout: Int!\n\n  \"\"\"The synthetic error rate configured for the field.\"\"\"\n  errorRate: ErrorRate!\n}\n\ninput FieldConfigInput {\n  \"\"\"\n  The synthetic timeout configured for a field. Set to `null` to reset the value\n  back to its default. Omit this field to maintain its value. Defaults to `0`.\n  \"\"\"\n  timeout: Int\n\n  \"\"\"\n  The synthetic error rate configured for a field. This should be a value\n  between `0` and `1` where `0` means no synthetic errors should be thrown and\n  `1` means errors should be thrown 100% of the time. Set to `null` to reset the\n  value back to its default. Omit this field to maintain its value. Defaults to\n  `0`.\n  \"\"\"\n  errorRate: ErrorRate\n}\n\ninput FieldInput {\n  \"\"\"\n  Configure a field by its type in the schema. This will apply the config to all\n  fields of the given type regardless of where it is queried in the scheam.\n  \n  One of `path` or `schema` is required. If both are provided, `schema` will\n  take precendence as it has broader impact.\n  \"\"\"\n  schemaField: SchemaFieldInput\n}\n\ntype FollowedArtistEdge {\n  \"\"\"The followed artist\"\"\"\n  node: Artist!\n}\n\ntype FollowedArtistsConnection {\n  \"\"\"The list of followed artists.\"\"\"\n  edges: [FollowedArtistEdge!]!\n\n  \"\"\"Pagination information for the set of followed artists.\"\"\"\n  pageInfo: PageInfoCursorBased!\n}\n\ntype Followers {\n  \"\"\"The total number of followers.\"\"\"\n  total: Int!\n}\n\ntype Image {\n  \"\"\"The source URL of the image.\"\"\"\n  url: String!\n\n  \"\"\"The image height in pixels.\"\"\"\n  height: Int\n\n  \"\"\"The image width in pixels.\"\"\"\n  width: Int\n}\n\ntype Mutation {\n  \"\"\"\n  Start a new context or resume current playback on the user's active device.\n  \"\"\"\n  resumePlayback(input: ResumePlaybackInput): ResumePlaybackPayload\n\n  \"\"\"Pause playback on the user's account.\"\"\"\n  pausePlayback(\n    \"\"\"\n    Additional context when pausing playback. Omit to pause playback on the\n    current device.\n    \"\"\"\n    context: PausePlaybackContextInput\n  ): PausePlaybackResponse\n\n  \"\"\"Seeks to the given position in the user’s currently playing track.\"\"\"\n  seekToPosition(\n    \"\"\"\n    The position in milliseconds to seek to. Must be a positive number. Passing\n    in a position that is greater than the length of the track will cause the\n    player to start playing the next song.\n    \"\"\"\n    positionMs: Int!\n\n    \"\"\"\n    Additional context to determine the device where the action should occur.\n    \"\"\"\n    context: SeekToPositionContextInput\n  ): SeekToPositionResponse\n\n  \"\"\"Set the repeat mode for the user's playback.\"\"\"\n  setRepeatMode(\n    \"\"\"\n    `track`, `context` or `off`.\n    `track` will repeat the current track.\n    `context` will repeat the current context.\n    `off` will turn repeat off.\n    \"\"\"\n    state: RepeatMode!\n\n    \"\"\"\n    Additional context to determine the device where the action should occur.\n    \"\"\"\n    context: SetRepeatModeContextInput\n  ): SetRepeatModeResponse\n\n  \"\"\"Set the volume for the user’s current playback device.\"\"\"\n  setVolume(\n    \"\"\"The volume to set. Must be a value from 0 to 100 inclusive.\"\"\"\n    volumePercent: Int!\n\n    \"\"\"\n    Additional context to determine the device where the action should occur.\n    \"\"\"\n    context: SetVolumeContextInput\n  ): SetVolumeResponse\n\n  \"\"\"Toggle shuffle on or off for user’s playback.\"\"\"\n  shufflePlayback(\n    \"\"\"\n    `true`: Shuffle user's playback.\n    `false`: Do not shuffle user's playback.\n    \"\"\"\n    state: Boolean!\n\n    \"\"\"\n    Additional context to determine the device where the action should occur.\n    \"\"\"\n    context: ShufflePlaybackContextInput\n  ): ShufflePlaybackResponse\n\n  \"\"\"Skips to next track in the user’s queue.\"\"\"\n  skipToNext(\n    \"\"\"\n    Additional context to determine the device where the action should occur.\n    \"\"\"\n    context: SkipToNextContextInput\n  ): SkipToNextResponse\n\n  \"\"\"Skips to previous track in the user’s queue.\"\"\"\n  skipToPrevious(context: SkipToPreviousContextInput): SkipToPreviousResponse\n\n  \"\"\"\n  Transfer playback to a new device and determine if it should start playing.\n  \"\"\"\n  transferPlayback(input: TransferPlaybackInput!): TransferPlaybackPayload\n\n  \"\"\"Add an item to the end of the user's current playback queue.\"\"\"\n  addItemToPlaybackQueue(input: AddItemToPlaybackQueueInput!): AddItemToPlaybackQueuePayload\n\n  \"\"\"Add one or more items to a user's playlist.\"\"\"\n  addItemsToPlaylist(input: AddItemsToPlaylistInput!): AddItemsToPlaylistPayload\n\n  \"\"\"\n  Update configuration for a field in the schema. Allows tweaks to the\n  synthetic timeouts and error rates associated with the field. By default, both\n  the timeout and error rate are set to 0.\n  \"\"\"\n  updateFieldConfig(input: UpdateFieldConfigInput!): UpdateFieldConfigPayload\n\n  \"\"\"Remove one or more items from a user's playlist.\"\"\"\n  removeItemFromPlaylist(input: RemoveItemFromPlaylistInput!): RemoveItemFromPlaylistPayload\n\n  \"\"\"\n  Remove one or more albums from the current user's 'Your Music' library.\n  \"\"\"\n  removeSavedAlbums(input: RemoveSavedAlbumsInput!): RemoveSavedAlbumsPayload\n\n  \"\"\"Remove one or more episodes from the current user's library.\"\"\"\n  removeSavedEpisodes(input: RemoveSavedEpisodesInput!): RemoveSavedEpisodesPayload\n\n  \"\"\"Delete one or more shows from current Spotify user's library.\"\"\"\n  removeSavedShows(input: RemoveSavedShowsInput!): RemoveSavedShowsPayload\n\n  \"\"\"\n  Remove one or more tracks from the current user's 'Your Music' library.\n  \"\"\"\n  removeSavedTracks(input: RemoveSavedTracksInput!): RemoveSavedTracksPayload\n\n  \"\"\"Reset a field's config back to its default values.\"\"\"\n  resetFieldConfig(input: ResetFieldConfigInput!): ResetFieldConfigPayload\n\n  \"\"\"Save one or more albums to the current user's 'Your Music' library.\"\"\"\n  saveAlbums(input: SaveAlbumsInput!): SaveAlbumsPayload\n\n  \"\"\"Save one or more episodes to the current user's library.\"\"\"\n  saveEpisodes(input: SaveEpisodesInput!): SaveEpisodesPayload\n\n  \"\"\"Save one or more shows to current Spotify user's library.\"\"\"\n  saveShows(input: SaveShowsInput!): SaveShowsPayload\n\n  \"\"\"Save one or more tracks to the current user's 'Your Music' library.\"\"\"\n  saveTracks(input: SaveTracksInput!): SaveTracksPayload\n}\n\ntype NewReleaseEdge {\n  \"\"\"The newly released album\"\"\"\n  node: Album!\n}\n\ntype NewReleasesConnection {\n  \"\"\"The list of new releases\"\"\"\n  edges: [NewReleaseEdge!]!\n\n  \"\"\"Pagination information for the new releases\"\"\"\n  pageInfo: PageInfo!\n}\n\ntype PageInfo {\n  \"\"\"Whether there is a next page of items.\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"Whether there is a previous page of items.\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"\n  The maximum number of items in the response (as set in the query or default)\n  \"\"\"\n  limit: Int!\n\n  \"\"\"The offset of the items returned (as set in the query or default)\"\"\"\n  offset: Int!\n\n  \"\"\"The total number of items returned for the page.\"\"\"\n  total: Int!\n}\n\ntype PageInfoCursorBased {\n  \"\"\"\n  A link to the Web API endpoint returning the full result of the request.\n  \"\"\"\n  href: String!\n\n  \"\"\"\n  The maximum number of items in the response (as set in the query or default)\n  \"\"\"\n  limit: Int!\n\n  \"\"\"URL to the next page of items. (`null` if none)\"\"\"\n  next: String\n\n  \"\"\"The cursors used to find the next set of items.\"\"\"\n  cursors: Cursors\n\n  \"\"\"The total number of items available to return.\"\"\"\n  total: Int!\n}\n\ninput PausePlaybackContextInput {\n  \"\"\"\n  The id of the device this command is targeting. If not supplied, the user's\n  currently active device is the target.\n  \"\"\"\n  deviceId: String\n}\n\ntype PausePlaybackResponse {\n  \"\"\"The updated playback state\"\"\"\n  playbackState: PlaybackState\n}\n\ntype PlaybackContext {\n  \"\"\"A link to the Web API endpoint providing full details of the track.\"\"\"\n  href: String!\n\n  \"\"\"The object type, e.g. \"artist\", \"playlist\", \"album\", \"show\".\"\"\"\n  type: PlaybackContextType!\n\n  \"\"\"External URLs for this context.\"\"\"\n  externalUrls: ExternalUrl!\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the context.\n  \"\"\"\n  uri: String!\n}\n\nenum PlaybackContextType {\n  ALBUM\n  ARTIST\n  AUDIO_FEATURES\n  COLLECTION\n  COLLECTION_YOUR_EPISODES\n  EPISODE\n  GENRE\n  PLAYLIST\n  SHOW\n  TRACK\n  USER\n}\n\ninterface PlaybackItem {\n  \"\"\"\n  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the playback item.\n  \"\"\"\n  id: ID!\n\n  \"\"\"The duration for the playback item in milliseconds.\"\"\"\n  durationMs: Int!\n\n  \"\"\"Known external URLs for this playback item.\"\"\"\n  externalUrls: ExternalUrl!\n\n  \"\"\"\n  A link to the Web API endpoint providing full details of the playlist item.\n  \"\"\"\n  href: String!\n\n  \"\"\"The name of the playlist item.\"\"\"\n  name: String!\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the episode.\n  \"\"\"\n  uri: String!\n}\n\ntype PlaybackQueue {\n  currentlyPlaying: PlaybackItem\n  queue: [PlaybackItem!]!\n}\n\ntype PlaybackState {\n  \"\"\"\n  Allows to update the user interface based on which playback actions are\n  available within the current context.\n  \"\"\"\n  actions: Actions!\n\n  \"\"\"A context object.\"\"\"\n  context: PlaybackContext\n\n  \"\"\"The device that is currently active.\"\"\"\n  device: Device!\n\n  \"\"\"If something is currently playing, return `true`.\"\"\"\n  isPlaying: Boolean!\n\n  \"\"\"The currently playing track or episode\"\"\"\n  item: PlaybackItem\n\n  \"\"\"Progress into the currently playing track or episode. Can be `null`\"\"\"\n  progressMs: Int\n\n  \"\"\"off, track, context\"\"\"\n  repeatState: RepeatMode!\n\n  \"\"\"If shuffle is on or off.\"\"\"\n  shuffleState: Boolean!\n\n  \"\"\"Unix Millisecond Timestamp when data was fetched.\"\"\"\n  timestamp: Timestamp!\n}\n\ntype Player {\n  \"\"\"\n  Information about the object currently being played on the user's Spotify account.\n  \"\"\"\n  currentlyPlaying: CurrentlyPlaying\n\n  \"\"\"Information about a user's available devices.\"\"\"\n  devices: [Device!]\n\n  \"\"\"Get the list of objects that make up the user's queue.\"\"\"\n  playbackQueue: PlaybackQueue\n\n  \"\"\"\n  Information about the user's current playback state, including track or\n  episode, progress, and active device.\n  \"\"\"\n  playbackState: PlaybackState\n\n  \"\"\"\n  Get tracks from the current user's recently played tracks. **Note**: Currently\n  doesn't support podcast episodes.\n  \"\"\"\n  recentlyPlayed(\n    \"\"\"\n    A Unix timestamp in milliseconds. Returns all items after (but not\n    including) this cursor position. If after is specified, before must not be\n    specified.\n    \"\"\"\n    after: Int\n\n    \"\"\"\n    A Unix timestamp in milliseconds. Returns all items before (but not\n    including) this cursor position. If before is specified, after must not be\n    specified.\n    \"\"\"\n    before: Int\n\n    \"\"\"\n    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n  ): RecentlyPlayedConnection\n}\n\n\"\"\"Information about a playlist owned by a Spotify user\"\"\"\ntype Playlist {\n  \"\"\"\n  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the playlist.\n  \"\"\"\n  id: ID!\n\n  \"\"\"`true` if the owner allows other users to modify the playlist.\"\"\"\n  collaborative: Boolean!\n\n  \"\"\"\n  The playlist description. _Only returned for modified, verified playlists,\n  otherwise `null`_.\n  \"\"\"\n  description: String\n\n  \"\"\"Known external URLs for this playlist.\"\"\"\n  externalUrls: ExternalUrl!\n\n  \"\"\"\n  Images for the playlist. The array may be empty or contain up to three images.\n  The images are returned by size in descending order.\n  See [Working with Playlists](https://developer.spotify.com/documentation/general/guides/working-with-playlists/).\n  **Note**: If returned, the source URL for the image (`url`) is temporary and\n  will expire in less than a day.\n  \"\"\"\n  images: [Image!]\n\n  \"\"\"The name of the playlist.\"\"\"\n  name: String!\n\n  \"\"\"The user who owns the playlist.\"\"\"\n  owner: User!\n\n  \"\"\"\n  The playlist's public/private status: `true` the playlist is public, `false`\n  the playlist is private, `null` the playlist status is not relevant. For more\n  about public/private status, see [Working with Playlists](https://developer.spotify.com/documentation/general/guides/working-with-playlists/)\n  \"\"\"\n  public: Boolean\n\n  \"\"\"The tracks of the playlist.\"\"\"\n  tracks(\n    \"\"\"\n    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n\n    \"\"\"\n    The index of the first item to return. Default: 0 (the first item).\n    \n    Use with `limit` to get the next set of items.\n    \"\"\"\n    offset: Int\n  ): PlaylistTrackConnection!\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) */\n  for the playlist.\n  \"\"\"\n  uri: String!\n}\n\n\"\"\"A paged set of playlists\"\"\"\ntype PlaylistConnection {\n  \"\"\"The set of playlists.\"\"\"\n  edges: [PlaylistEdge!]!\n\n  \"\"\"Pagination information for the set of playlists\"\"\"\n  pageInfo: PageInfo!\n}\n\ntype PlaylistEdge {\n  \"\"\"The playlist\"\"\"\n  node: Playlist!\n}\n\ninterface PlaylistTrack {\n  \"\"\"The playlist track length in milliseconds.\"\"\"\n  durationMs: Int!\n\n  \"\"\"External URLs for this episode.\"\"\"\n  externalUrls: ExternalUrl!\n\n  \"\"\"A link to the Web API endpoint providing full details of the episode.\"\"\"\n  href: String!\n\n  \"\"\"\n  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the playlist track.\n  \"\"\"\n  id: ID!\n\n  \"\"\"The name of the episode.\"\"\"\n  name: String!\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the playlist track.\n  \"\"\"\n  uri: String!\n}\n\n\"\"\"A paged set of tracks for a playlist\"\"\"\ntype PlaylistTrackConnection {\n  \"\"\"Pagination information for the tracks belonging to a playlist\"\"\"\n  edges: [PlaylistTrackEdge!]!\n\n  \"\"\"Pagination information for the tracks belonging to a playlist\"\"\"\n  pageInfo: PageInfo!\n}\n\ntype PlaylistTrackEdge {\n  \"\"\"The date and time the track was added to the playlist\"\"\"\n  addedAt: DateTime\n\n  \"\"\"The user that added the track to the playlist\"\"\"\n  addedBy: User!\n\n  \"\"\"The playlist track\"\"\"\n  node: PlaylistTrack!\n}\n\ntype Query {\n  \"\"\"Spotify catalog information for an album.\"\"\"\n  album(id: ID!): Album\n\n  \"\"\"\n  Get Spotify catalog information for multiple albums identified by their Spotify IDs.\n  \"\"\"\n  albums(ids: [ID!]!): [Album!]\n\n  \"\"\"Spotify catalog information for an artist.\"\"\"\n  artist(id: ID!): Artist\n\n  \"\"\"\n  Get Spotify catalog information for several artists based on their Spotify IDs.\n  \"\"\"\n  artists(ids: [ID!]!): [Artist!]\n\n  \"\"\"\n  Get a list of developer-specific settings, such as GraphQL field configuration.\n  \"\"\"\n  developer: Developer!\n\n  \"\"\"\n  Get Spotify catalog information for a single episode identified by its unique\n  Spotify ID.\n  \"\"\"\n  episode(id: ID!): Episode\n\n  \"\"\"\n  Get Spotify catalog information for several episodes based on their Spotify IDs.\n  \"\"\"\n  episodes(\n    \"\"\"\n    A list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the episodes. Maximum: 50 IDs.\n    \"\"\"\n    ids: [ID!]!\n  ): [Episode!]\n\n  \"\"\"\n  A list of available genres seed parameter values for\n  [recommendations](https://developer.spotify.com/documentation/web-api/reference/#/operations/get-recommendations).\n  \"\"\"\n  genres: [String!]!\n\n  \"\"\"\n  Recommendations for the current user.\n  \n  Recommendations are generated based on the available information for a given\n  seed entity and matched against similar artists and tracks. If there is\n  sufficient information about the provided seeds, a list of tracks will be\n  returned together with pool size details.\n  \n  For artists and tracks that are very new or obscure there might not be enough\n  data to generate a list of tracks.\n  \"\"\"\n  recommendations(\n    seeds: RecommendationSeedInput!\n    acousticness: RecommendationAcousticnessInput\n    danceability: RecommendationDanceabilityInput\n    durationMs: RecommendationDurationMsInput\n    energy: RecommendationEnergyInput\n    instrumentalness: RecommendationInstrumentalnessInput\n    key: RecommendationKeyInput\n    liveness: RecommendationLivenessInput\n    loudness: RecommendationLoudnessInput\n    mode: RecommendationModeInput\n    popularity: RecommendationPopularityInput\n    speechiness: RecommendationSpeechinessInput\n    tempo: RecommendationTempoInput\n    timeSignature: RecommendationTimeSignatureInput\n    valence: RecommendationValenceInput\n\n    \"\"\"\n    The target size of the list of recommended tracks. For seeds with unusually\n    small pools or when highly restrictive filtering is applied, it may be\n    impossible to generate the requested number of recommended tracks. Debugging\n    information for such cases is available in the response.\n    \n    Default value: 20.\n    Minimum value: 1.\n    Maximum value: 100.\n    \"\"\"\n    limit: Int\n  ): Recommendations\n\n  \"\"\"Information about the current logged-in user.\"\"\"\n  me: CurrentUser\n\n  \"\"\"\n  Get a list of new album releases featured in Spotify (shown, for example, on a Spotify player’s “Browse” tab).\n  \"\"\"\n  newReleases(\n    \"\"\"\n    A country: an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Provide this parameter if you want the list of returned items to be relevant to a particular country. If omitted, the returned items will be relevant to all countries.\n    \"\"\"\n    country: CountryCode\n\n    \"\"\"\n    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n\n    \"\"\"\n    The index of the first item to return. Default: 0 (the first item). Use with `limit` to get the next set of items.\n    \"\"\"\n    offset: Int\n  ): NewReleasesConnection\n\n  \"\"\"A playlist owned by a Spotify user.\"\"\"\n  playlist(id: ID!): Playlist\n\n  \"\"\"\n  A list of Spotify featured playlists (shown, for example, on a Spotify\n  player's 'Browse' tab).\n  \"\"\"\n  featuredPlaylists(\n    \"\"\"\n    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n\n    \"\"\"\n    The index of the first playlist to return. Default: 0 (the first object).\n    \n    Use with `limit` to get the next set of playlists.\n    \"\"\"\n    offset: Int\n\n    \"\"\"\n    Specify the local time to get results tailored for that specific date and\n    time in the day. If not provided, the response defaults to the current UTC\n    time. If there were no featured playlists (or there is no data) at the\n    specified time, the response will revert to the current UTC time.\n    \"\"\"\n    timestamp: DateTime\n  ): FeaturedPlaylistConnection\n\n  \"\"\"\n  Get Spotify catalog information about albums, artists, playlists, tracks, shows, episodes or audiobooks that match a keyword string.\n  \n  **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**\n  \"\"\"\n  search(\n    \"\"\"\n    Your search query.\n    \n    You can narrow down your search using field filters. The available filters are album, artist, track, year, upc, tag:hipster, tag:new, isrc, and genre. Each field filter only applies to certain result types.\n    \n    The artist and year filters can be used while searching albums, artists and tracks. You can filter on a single year or a range (e.g. 1955-1960).\n    The album filter can be used while searching albums and tracks.\n    The genre filter can be used while searching artists and tracks.\n    The isrc and track filters can be used while searching tracks.\n    The upc, tag:new and tag:hipster filters can only be used while searching albums. The tag:new filter will return albums released in the past two weeks and tag:hipster can be used to return only albums with the lowest 10% popularity.\n    \"\"\"\n    q: String!\n\n    \"\"\"\n    If `includeExternal=audio` is specified it signals that the client can play externally hosted audio content, and marks the content as playable in the response. By default externally hosted audio content is marked as unplayable in the response.\n    \"\"\"\n    includeExternal: SearchExternalValue\n\n    \"\"\"The maximum number of results to return in each item type.\"\"\"\n    limit: Int\n\n    \"\"\"\n    The index of the first result to return. Use with `limit` to get the next page of search results.\n    \"\"\"\n    offset: Int\n\n    \"\"\"\n    A list of item types to search across. Search results include hits from all the specified item types.\n    \"\"\"\n    type: [SearchType!]!\n  ): SearchResults\n\n  \"\"\"\n  Get Spotify catalog information for a single show identified by its unique\n  Spotify ID.\n  \"\"\"\n  show(id: ID!): Show\n\n  \"\"\"\n  Get Spotify catalog information for several shows based on their Spotify IDs.\n  \"\"\"\n  shows(\n    \"\"\"\n    A list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the shows. Maximum: 50 IDs.\n    \"\"\"\n    ids: [ID!]!\n  ): [Show!]\n\n  \"\"\"\n  Get Spotify catalog information for a single track identified by its unique\n  Spotify ID.\n  \"\"\"\n  track(\n    \"\"\"\n    The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n    for the track.\n    \"\"\"\n    id: ID!\n  ): Track\n\n  \"\"\"\n  Get Spotify catalog information for multiple tracks based on their Spotify IDs.\n  \"\"\"\n  tracks(\n    \"\"\"\n    A list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the tracks. Maximum: 50 IDs.\n    \"\"\"\n    ids: [ID!]!\n  ): [Track!]\n\n  \"\"\"Get audio features for multiple tracks based on their Spotify IDs.\"\"\"\n  tracksAudioFeatures(\n    \"\"\"\n    A list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the tracks. Maximum: 100 IDs.\n    \"\"\"\n    ids: [ID!]!\n  ): [TrackAudioFeatures!]!\n}\n\ntype RecentlyPlayedConnection {\n  \"\"\"The list of recently played items.\"\"\"\n  edges: [RecentlyPlayedEdge!]!\n}\n\ntype RecentlyPlayedEdge {\n  \"\"\"The date and time the track was played at.\"\"\"\n  playedAt: DateTime!\n\n  \"\"\"The item that was recently played.\"\"\"\n  node: PlaybackItem!\n\n  \"\"\"The playback context for the track\"\"\"\n  context: PlaybackContext\n}\n\ninput RecommendationAcousticnessInput {\n  min: Float\n  max: Float\n  target: Float\n}\n\ninput RecommendationDanceabilityInput {\n  min: Float\n  max: Float\n  target: Float\n}\n\ninput RecommendationDurationMsInput {\n  min: Int\n  max: Int\n  target: Int\n}\n\ninput RecommendationEnergyInput {\n  min: Float\n  max: Float\n  target: Float\n}\n\ninput RecommendationInstrumentalnessInput {\n  min: Float\n  max: Float\n  target: Float\n}\n\ninput RecommendationKeyInput {\n  min: Int\n  max: Int\n  target: Int\n}\n\ninput RecommendationLivenessInput {\n  min: Float\n  max: Float\n  target: Float\n}\n\ninput RecommendationLoudnessInput {\n  min: Float\n  max: Float\n  target: Float\n}\n\ninput RecommendationModeInput {\n  min: Int\n  max: Int\n  target: Int\n}\n\ninput RecommendationPopularityInput {\n  min: Float\n  max: Float\n  target: Float\n}\n\n\"\"\"Information about recommendations for the current user\"\"\"\ntype Recommendations {\n  \"\"\"\n  An array of recommendation [seed objects](https://developer.spotify.com/documentation/web-api/reference/#object-recommendationseedobject).\n  \"\"\"\n  seeds: [RecommendationSeed!]!\n\n  \"\"\"\n  An array of [track object (simplified)](https://developer.spotify.com/documentation/web-api/reference/#object-simplifiedtrackobject)\n  ordered according to the parameters supplied.\n  \"\"\"\n  tracks: [Track!]!\n}\n\n\"\"\"\nInformation about a recommendation [seed object](https://developer.spotify.com/documentation/web-api/reference/#object-recommendationseedobject).\n\"\"\"\ntype RecommendationSeed {\n  \"\"\"\n  The id used to select this seed. This will be the same as the string used in\n  the `seedArtists`, `seedTracks` or `seedGenres` parameter.\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The number of tracks available after min_* and max_* filters have been\n  applied.\n  \"\"\"\n  afterFilteringSize: Int!\n\n  \"\"\"\n  The number of tracks available after relinking for regional availability.\n  \"\"\"\n  afterRelinkingSize: Int!\n\n  \"\"\"\n  A link to the full track or artist data for this seed. For tracks this will\n  be a link to a [Track Object](https://developer.spotify.com/documentation/web-api/reference/#object-trackobject).\n  For artists a link to an [Artist Object](https://developer.spotify.com/documentation/web-api/reference/#object-artistobject).\n  For genre seeds, this value will be `null`.\n  \"\"\"\n  href: String\n\n  \"\"\"The number of recommended tracks available for this seed.\"\"\"\n  initialPoolSize: Int!\n\n  \"\"\"The entity type of this seed.\"\"\"\n  type: RecommendationSeedType!\n}\n\ninput RecommendationSeedInput {\n  \"\"\"\n  A list of [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for seed artists. Up to 5 seed values may be provided in any combination of `seedArtists`, `seedTracks` and `seedGenres`.\n  \n  Example value: [\"4NHQUGzhtTLFvgF5SZesLK\"]\n  \"\"\"\n  seedArtists: [ID!]\n\n  \"\"\"\n  A list of any genres in the set of available genre seeds. Up to 5 seed values may be provided in any combination of `seedArtists`, `seedTracks` and `seedGenres`.\n  \n  Example value: [\"classical\", \"country\"]\n  \"\"\"\n  seedGenres: [String!]\n\n  \"\"\"\n  A list of [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for a seed track. Up to 5 seed values may be provided in any combination of\n  `seedArtists`, `seedTracks` and `seedGenres`.\n  \n  Example value: [\"0c6xIDDpzE81m2q797ordA\"]\n  \"\"\"\n  seedTracks: [ID!]\n}\n\n\"\"\"Available entity types for recommendation seeds.\"\"\"\nenum RecommendationSeedType {\n  ARTIST\n  TRACK\n  GENRE\n}\n\ninput RecommendationSpeechinessInput {\n  min: Float\n  max: Float\n  target: Float\n}\n\ninput RecommendationTempoInput {\n  min: Float\n  max: Float\n  target: Float\n}\n\ninput RecommendationTimeSignatureInput {\n  min: Int\n  max: Int\n  target: Int\n}\n\ninput RecommendationValenceInput {\n  min: Float\n  max: Float\n  target: Float\n}\n\ntype ReleaseDate {\n  \"\"\"\n  The date the item was first released, for example `1981-12-15`. Depending on\n  the precision, it might be shown as `1981-12`, or `1981-12-15`.\n  \"\"\"\n  date: String!\n\n  \"\"\"The precision with which the `date` value is known.\"\"\"\n  precision: ReleaseDatePrecision!\n}\n\nenum ReleaseDatePrecision {\n  YEAR\n  MONTH\n  DAY\n}\n\ninput RemoveItemFromPlaylistInput {\n  \"\"\"\n  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  of the playlist.\n  \"\"\"\n  playlistId: ID!\n\n  \"\"\"\n  The playlist's snapshot ID against which you want to make the changes. The API\n  will validate that the specified items exist and in the specified positions\n  and make the changes, even if more recent changes have been made to the\n  playlist.\n  \"\"\"\n  snapshotId: ID\n\n  \"\"\"\n  An array of objects containing [Spotify URIs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  of the tracks or episodes to remove.\n  \"\"\"\n  tracks: [RemoveItemFromPlaylistTrackInput!]!\n}\n\ntype RemoveItemFromPlaylistPayload {\n  \"\"\"A snapshot ID for the playlist\"\"\"\n  snapshotId: ID\n\n  \"\"\"The playlist after the item was removed\"\"\"\n  playlist: Playlist\n}\n\ninput RemoveItemFromPlaylistTrackInput {\n  uri: String!\n}\n\ninput RemoveSavedAlbumsInput {\n  \"\"\"\n  A list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids).\n  Maximum 20 IDs.\n  \"\"\"\n  ids: [ID!]!\n}\n\ntype RemoveSavedAlbumsPayload {\n  \"\"\"The albums that were removed from the Spotify user's library.\"\"\"\n  removedAlbums: [Album!]\n}\n\ninput RemoveSavedEpisodesInput {\n  \"\"\"\n  A list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids).\n  Maximum 50 IDs.\n  \"\"\"\n  ids: [ID!]!\n}\n\ntype RemoveSavedEpisodesPayload {\n  \"\"\"The episodes that were removed from the Spotify user's library.\"\"\"\n  removedEpisodes: [Episode!]\n}\n\ninput RemoveSavedShowsInput {\n  \"\"\"\n  A list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids).\n  for the shows. Maximum 50 IDs.\n  \"\"\"\n  ids: [ID!]!\n}\n\ntype RemoveSavedShowsPayload {\n  \"\"\"The shows that were removed from the Spotify user's library.\"\"\"\n  removedShows: [Show!]\n}\n\ninput RemoveSavedTracksInput {\n  \"\"\"\n  A comma-separated list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids).\n  Maximum 50 IDs.\n  \"\"\"\n  ids: [ID!]!\n}\n\ntype RemoveSavedTracksPayload {\n  \"\"\"The tracks that were removed from the Spotify user's library.\"\"\"\n  removedTracks: [Track!]\n}\n\nenum RepeatMode {\n  CONTEXT\n  OFF\n  TRACK\n}\n\ninput ResetFieldConfigInput {\n  \"\"\"The field that will be reset to its default values\"\"\"\n  field: FieldInput!\n}\n\ntype ResetFieldConfigPayload {\n  \"\"\"The updated field config\"\"\"\n  fieldConfig: FieldConfig\n}\n\ninput ResumePlaybackInput {\n  \"\"\"\n  Spotify URI of the context to play. Valid contexts are albums, artists &\n  playlists.\n  \"\"\"\n  contextUri: String\n\n  \"\"\"\n  The id of the device this command is targeting. If not supplied, the user's\n  currently active device is the target.\n  \"\"\"\n  deviceId: ID\n\n  \"\"\"\n  Indicates from where in the context playback should start. Only available when\n  contextUri corresponds to an album or playlist object.\n  \"\"\"\n  offset: ResumePlaybackOffsetInput\n\n  \"\"\"Indicates the position where playback should occur in milliseconds.\"\"\"\n  positionMs: Int\n\n  \"\"\"An array of the Spotify track URIs to play.\"\"\"\n  uris: [String!]\n}\n\ninput ResumePlaybackOffsetInput {\n  \"\"\"\n  Non-negative, zero-based value that corresponds to the numeric position in the\n  album or playlist\n  \"\"\"\n  position: Int\n\n  \"\"\"Spotify URI of the item in the album or playlist\"\"\"\n  uri: String\n}\n\ntype ResumePlaybackPayload {\n  playbackState: PlaybackState\n}\n\ntype ResumePoint {\n  \"\"\"Whether or not the episode has been fully played by the user.\"\"\"\n  fullyPlayed: Boolean!\n\n  \"\"\"The user's most recent position in the episode in milliseconds.\"\"\"\n  resumePositionMs: Int!\n}\n\ninput SaveAlbumsInput {\n  \"\"\"\n  A list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the albums. Maximum: 20 IDs\n  \"\"\"\n  ids: [ID!]!\n}\n\ntype SaveAlbumsPayload {\n  \"\"\"The albums that were saved to the Spotify user's library\"\"\"\n  savedAlbums: [Album!]\n}\n\ntype SavedAlbumEdge {\n  \"\"\"The date the album was saved.\"\"\"\n  addedAt: DateTime!\n\n  \"\"\"The album object.\"\"\"\n  node: Album!\n}\n\ntype SavedAlbumsConnection {\n  \"\"\"The list of saved albums.\"\"\"\n  edges: [SavedAlbumEdge!]!\n\n  \"\"\"Pagination information for the set of playlists\"\"\"\n  pageInfo: PageInfo!\n}\n\ntype SavedEpisodeEdge {\n  \"\"\"The date the episode was saved.\"\"\"\n  addedAt: DateTime!\n\n  \"\"\"The saved episode.\"\"\"\n  node: Episode!\n}\n\ntype SavedEpisodesConnection {\n  \"\"\"The list of saved episodes.\"\"\"\n  edges: [SavedEpisodeEdge!]!\n\n  \"\"\"Pagination information for the set of episodes\"\"\"\n  pageInfo: PageInfo!\n}\n\ntype SavedShowEdge {\n  \"\"\"The date the show was saved.\"\"\"\n  addedAt: DateTime!\n\n  \"\"\"The show\"\"\"\n  node: Show!\n}\n\ntype SavedShowsConnection {\n  \"\"\"A list of saved shows.\"\"\"\n  edges: [SavedShowEdge!]!\n\n  \"\"\"\n  \"Pagination information for the set of saved shows\"\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\ntype SavedTrackEdge {\n  \"\"\"The date the track was saved.\"\"\"\n  addedAt: DateTime!\n\n  \"\"\"The track\"\"\"\n  node: Track!\n}\n\ntype SavedTracksConnection {\n  \"\"\"A list of saved tracks.\"\"\"\n  edges: [SavedTrackEdge!]!\n\n  \"\"\"\n  \"Pagination information for the set of playlists\"\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\ninput SaveEpisodesInput {\n  \"\"\"\n  An list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids).\n  Maximum: 50 IDs\n  \"\"\"\n  ids: [ID!]!\n}\n\ntype SaveEpisodesPayload {\n  \"\"\"The episodes that were saved to the Spotify user's library\"\"\"\n  savedEpisodes: [Episode!]\n}\n\ninput SaveShowsInput {\n  \"\"\"\n  An list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids).\n  for the shows. Maximum: 50 IDs\n  \"\"\"\n  ids: [ID!]!\n}\n\ntype SaveShowsPayload {\n  \"\"\"The shows that were saved to the Spotify user's library\"\"\"\n  savedShows: [Show!]\n}\n\ninput SaveTracksInput {\n  \"\"\"\n  A list of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids).\n  Maximum: 50 IDs\n  \"\"\"\n  ids: [ID!]!\n}\n\ntype SaveTracksPayload {\n  \"\"\"The tracks that were saved to the Spotify user's library\"\"\"\n  savedTracks: [Track!]\n}\n\ntype SchemaField {\n  \"\"\"The parent type name in the schema (ex: `User`)\"\"\"\n  typename: String!\n\n  \"\"\"The name of the field in the type (ex: `firstName`)\"\"\"\n  fieldName: String!\n}\n\ninput SchemaFieldInput {\n  \"\"\"The parent type name in the schema (ex: `User`)\"\"\"\n  typename: String!\n\n  \"\"\"The name of the field in the type (ex: `firstName`)\"\"\"\n  fieldName: String!\n}\n\ntype SearchAlbumEdge {\n  \"\"\"The album returned from the search\"\"\"\n  node: Album!\n}\n\ntype SearchAlbumsConnection {\n  \"\"\"The list of albums returned from the search\"\"\"\n  edges: [SearchAlbumEdge!]!\n\n  \"\"\"Pagination information for albums in a search\"\"\"\n  pageInfo: PageInfo!\n}\n\ntype SearchArtistEdge {\n  \"\"\"The artist returned from the search\"\"\"\n  node: Artist!\n}\n\ntype SearchArtistsConnection {\n  \"\"\"The list of artists returned from the search\"\"\"\n  edges: [SearchArtistEdge!]!\n\n  \"\"\"Pagination information for artists in a search\"\"\"\n  pageInfo: PageInfo!\n}\n\ntype SearchEpisodeEdge {\n  \"\"\"The episode returned from the search\"\"\"\n  node: Episode!\n}\n\ntype SearchEpisodesConnection {\n  \"\"\"The list of episodes returned from the search\"\"\"\n  edges: [SearchEpisodeEdge!]!\n\n  \"\"\"Pagination information for episodes in a search\"\"\"\n  pageInfo: PageInfo!\n}\n\nenum SearchExternalValue {\n  AUDIO\n}\n\ntype SearchPlaylistEdge {\n  \"\"\"The playlist returned from the search\"\"\"\n  node: Playlist!\n}\n\ntype SearchPlaylistsConnection {\n  \"\"\"The list of playlists returned from the search\"\"\"\n  edges: [SearchPlaylistEdge!]!\n\n  \"\"\"Pagination information for playlists in a search\"\"\"\n  pageInfo: PageInfo!\n}\n\ntype SearchResults {\n  \"\"\"\n  The set of albums returned from the search query. Only available if the search `type` includes `ALBUM`.\n  \"\"\"\n  albums: SearchAlbumsConnection\n\n  \"\"\"\n  The set of artists returned from the search query. Only available if the search `type` includes `ARTIST`.\n  \"\"\"\n  artists: SearchArtistsConnection\n\n  \"\"\"\n  The set of episodes returned from the search query. Only available if the search `type` includes `EPISODE`.\n  \"\"\"\n  episodes: SearchEpisodesConnection\n\n  \"\"\"\n  The set of playlists returned from the search query. Only available if the search `type` includes `PLAYLIST`.\n  \"\"\"\n  playlists: SearchPlaylistsConnection\n\n  \"\"\"\n  The set of shows returned from the search query. Only available if the search `type` includes `SHOW`.\n  \"\"\"\n  shows: SearchShowsConnection\n\n  \"\"\"\n  The set of tracks returned from the search query. Only available if the search `type` includes `TRACK`.\n  \"\"\"\n  tracks: SearchTracksConnection\n}\n\ntype SearchShowEdge {\n  \"\"\"The show returned from the search\"\"\"\n  node: Show!\n}\n\ntype SearchShowsConnection {\n  \"\"\"The list of shows returned from the search\"\"\"\n  edges: [SearchShowEdge!]!\n\n  \"\"\"Pagination information for shows in a search\"\"\"\n  pageInfo: PageInfo!\n}\n\ntype SearchTrackEdge {\n  \"\"\"The track returned in the search\"\"\"\n  node: Track!\n}\n\ntype SearchTracksConnection {\n  \"\"\"The list of tracks returned from the search\"\"\"\n  edges: [SearchTrackEdge!]!\n\n  \"\"\"Pagination information for tracks in a search\"\"\"\n  pageInfo: PageInfo!\n}\n\nenum SearchType {\n  ALBUM\n  ARTIST\n  EPISODE\n  PLAYLIST\n  TRACK\n  SHOW\n}\n\ninput SeekToPositionContextInput {\n  \"\"\"\n  The id of the device this command is targeting. If not supplied, the user's currently active device is the target.\n  \"\"\"\n  deviceId: ID\n}\n\ntype SeekToPositionResponse {\n  \"\"\"The updated state of playback after seeking to a position.\"\"\"\n  playbackState: PlaybackState\n}\n\ninput SetRepeatModeContextInput {\n  \"\"\"\n  The id of the device this command is targeting. If not supplied, the user's currently active device is the target.\n  \"\"\"\n  deviceId: ID\n}\n\ntype SetRepeatModeResponse {\n  \"\"\"The updated state of playback after setting a repeat mode.\"\"\"\n  playbackState: PlaybackState\n}\n\ninput SetVolumeContextInput {\n  \"\"\"\n  The id of the device this command is targeting. If not supplied, the user's currently active device is the target.\n  \"\"\"\n  deviceId: ID\n}\n\ntype SetVolumeResponse {\n  \"\"\"The state of playback after the volume has been set.\"\"\"\n  playbackState: PlaybackState\n}\n\n\"\"\"Spotify catalog information for a show.\"\"\"\ntype Show {\n  \"\"\"A description of the show.\"\"\"\n  description(format: TextFormat = PLAIN): String!\n\n  \"\"\"Spotify catalog information about an show’s episodes.\"\"\"\n  episodes(\n    \"\"\"\n    The maximum number of episodes to return. Default: 20. Minimum: 1. Maximum: 50.\n    \"\"\"\n    limit: Int\n\n    \"\"\"\n    The index of the first playlist to return. Default: 0 (the first object).\n    \n    Use with `limit` to get the next set of episodes.\n    \"\"\"\n    offset: Int\n  ): ShowEpisodesConnection\n\n  \"\"\"\n  Whether or not the show has explicit content (`true` = yes it does; `false`\n  = no it does not OR unknown).\n  \"\"\"\n  explicit: Boolean!\n\n  \"\"\"External URLs for this show.\"\"\"\n  externalUrls: ExternalUrl!\n\n  \"\"\"A link to the Web API endpoint providing full details of the show.\"\"\"\n  href: String!\n\n  \"\"\"\n  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the show.\n  \"\"\"\n  id: ID!\n\n  \"\"\"The cover art for the show in various sizes, widest first.\"\"\"\n  images: [Image!]!\n\n  \"\"\"\n  `true` if all of the shows episodes are hosted outside of Spotify's CDN. This\n  field might be `null` in some cases.\n  \"\"\"\n  isExternallyHosted: Boolean\n\n  \"\"\"\n  A list of the languages used in the show, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code.\n  \"\"\"\n  languages: [String!]!\n\n  \"\"\"The media type of the show.\"\"\"\n  mediaType: String!\n\n  \"\"\"The name of the episode.\"\"\"\n  name: String!\n\n  \"\"\"The publisher of the show.\"\"\"\n  publisher: String!\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the show.\n  \"\"\"\n  uri: String!\n}\n\ntype ShowEpisodeEdge {\n  \"\"\"The episode\"\"\"\n  node: Episode!\n}\n\ntype ShowEpisodesConnection {\n  \"\"\"A list of episodes for the show.\"\"\"\n  edges: [ShowEpisodeEdge!]!\n\n  \"\"\"Pagination information for the set of episodes\"\"\"\n  pageInfo: PageInfo!\n}\n\ninput ShufflePlaybackContextInput {\n  \"\"\"\n  The id of the device this command is targeting. If not supplied, the user's\n  currently active device is the target.\n  \"\"\"\n  deviceId: ID\n}\n\ntype ShufflePlaybackResponse {\n  \"\"\"The state of playback after shuffling playback.\"\"\"\n  playbackState: PlaybackState\n}\n\ninput SkipToNextContextInput {\n  \"\"\"\n  The id of the device this command is targeting. If not supplied, the user's\n  currently active device is the target.\n  \"\"\"\n  deviceId: ID\n}\n\ntype SkipToNextResponse {\n  \"\"\"The updated state of playback after skipping to next.\"\"\"\n  playbackState: PlaybackState\n}\n\ninput SkipToPreviousContextInput {\n  \"\"\"\n  The id of the device this command is targeting. If not supplied, the user's\n  currently active device is the target.\n  \"\"\"\n  deviceId: ID\n}\n\ntype SkipToPreviousResponse {\n  \"\"\"The updated state of playback after skipping to previous.\"\"\"\n  playbackState: PlaybackState\n}\n\ntype Subscription {\n  playbackStateChanged: PlaybackState\n}\n\nenum TextFormat {\n  PLAIN\n  HTML\n}\n\nenum TimeRange {\n  LONG_TERM\n  MEDIUM_TERM\n  SHORT_TERM\n}\n\nscalar Timestamp\n\ntype TopArtistEdge {\n  \"\"\"The artist.\"\"\"\n  node: Artist!\n}\n\ntype TopArtistsConnection {\n  \"\"\"The list of top tracks.\"\"\"\n  edges: [TopArtistEdge!]!\n\n  \"\"\"Pagination information for the set of top tracks.\"\"\"\n  pageInfo: PageInfo!\n}\n\ntype TopTrackEdge {\n  \"\"\"The track.\"\"\"\n  node: Track!\n}\n\ntype TopTracksConnection {\n  \"\"\"The list of top tracks.\"\"\"\n  edges: [TopTrackEdge!]!\n\n  \"\"\"Pagination information for the set of top tracks.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Spotify catalog information for a track.\"\"\"\ntype Track implements PlaylistTrack & PlaybackItem {\n  \"\"\"\n  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the track.\n  \"\"\"\n  id: ID!\n\n  \"\"\"The album on which the track appears.\"\"\"\n  album: Album!\n\n  \"\"\"The artists who performed the track.\"\"\"\n  artists: [Artist!]!\n\n  \"\"\"The track's audio feature information\"\"\"\n  audioFeatures: TrackAudioFeatures\n\n  \"\"\"\n  The disc number (usually `1` unless the album consists of more than one disc).\n  \"\"\"\n  discNumber: Int!\n\n  \"\"\"The track length in milliseconds\"\"\"\n  durationMs: Int!\n\n  \"\"\"\n  Whether or not the track has explicit lyrics (`true` = yes it does;\n  `false` = no it does not OR unknown)\n  \"\"\"\n  explicit: Boolean!\n\n  \"\"\"Known external IDs for the track.\"\"\"\n  externalIds: TrackExternalIds\n\n  \"\"\"Known external URLs for this track.\"\"\"\n  externalUrls: ExternalUrl!\n\n  \"\"\"A link to the Web API endpoint providing full details of the track.\"\"\"\n  href: String!\n\n  \"\"\"Whether or not the track is from a local file.\"\"\"\n  isLocal: Boolean!\n\n  \"\"\"\n  Part of the response when [Track Relinking](https://developer.spotify.com/documentation/general/guides/track-relinking-guide/)\n  is applied. If `true`, the track is playable in the given market.\n  Otherwise `false`.\n  \"\"\"\n  isPlayable: Boolean!\n\n  \"\"\"The name of the track\"\"\"\n  name: String!\n\n  \"\"\"\n  The popularity of the track. The value will be between 0 and 100, with 100\n  being the most popular.\n  \n  The popularity of a track is a value between 0 and 100, with 100 being the\n  most popular. The popularity is calculated by algorithm and is based, in the\n  most part, on the total number of plays the track has had and how recent those\n  plays are.\n  \n  Generally speaking, songs that are being played a lot now will have a higher\n  popularity than songs that were played a lot in the past. Duplicate tracks\n  (e.g. the same track from a single and an album) are rated independently.\n  Artist and album popularity is derived mathematically from track popularity.\n  Note: the popularity value may lag actual popularity by a few days: the value\n  is not updated in real time.\n  \"\"\"\n  popularity: Int!\n\n  \"\"\"A link to a 30 second preview (MP3 format) of the track. Can be `null`\"\"\"\n  previewUrl: String\n\n  \"\"\"\n  The number of the track. If an album has several discs, the track number is\n  the number on the specified disc.\n  \"\"\"\n  trackNumber: Int\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the track.\n  \"\"\"\n  uri: String!\n}\n\ntype TrackAudioFeatures {\n  \"\"\"\n  A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.\n  \"\"\"\n  acousticness: Float!\n\n  \"\"\"\n  A URL to access the full audio analysis of this track. An access token is required to access this data.\n  \"\"\"\n  analysisUrl: String!\n\n  \"\"\"\n  Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.\n  \"\"\"\n  danceability: Float!\n\n  \"\"\"The duration of the track in milliseconds.\"\"\"\n  durationMs: Int!\n\n  \"\"\"\n  Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.\n  \"\"\"\n  energy: Float!\n\n  \"\"\"The Spotify ID for the track.\"\"\"\n  id: ID!\n\n  \"\"\"\n  Predicts whether a track contains no vocals. \"Ooh\" and \"aah\" sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly \"vocal\". The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.\n  \"\"\"\n  instrumentalness: Float!\n\n  \"\"\"\n  The key the track is in. Integers map to pitches using standard [Pitch Class notation](https://en.wikipedia.org/wiki/Pitch_class). E.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on. If no key was detected, the value is -1.\n  \"\"\"\n  key: Int!\n\n  \"\"\"\n  Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.\n  \"\"\"\n  liveness: Float!\n\n  \"\"\"\n  The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typically range between -60 and 0 db.\n  \"\"\"\n  loudness: Float!\n\n  \"\"\"\n  Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.\n  \"\"\"\n  mode: Int!\n\n  \"\"\"\n  Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.\n  \"\"\"\n  speechiness: Float!\n\n  \"\"\"\n  The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.\n  \"\"\"\n  tempo: Float!\n\n  \"\"\"\n  An estimated time signature. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure). The time signature ranges from 3 to 7 indicating time signatures of \"3/4\", to \"7/4\".\n  \"\"\"\n  timeSignature: Int!\n\n  \"\"\"A link to the Web API endpoint providing full details of the track.\"\"\"\n  trackHref: String!\n\n  \"\"\"The Spotify URI for the track.\"\"\"\n  uri: String!\n\n  \"\"\"\n  A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).\n  \"\"\"\n  valence: Float!\n}\n\ntype TrackExternalIds {\n  \"\"\"\n  [International Standard Recording Code](http://en.wikipedia.org/wiki/International_Standard_Recording_Code)\n  \"\"\"\n  isrc: String\n\n  \"\"\"\n  [International Article Number](http://en.wikipedia.org/wiki/International_Article_Number_%28EAN%29)\n  \"\"\"\n  ean: String\n\n  \"\"\"\n  [Universal Product Code](http://en.wikipedia.org/wiki/Universal_Product_Code)\n  \"\"\"\n  upc: String\n}\n\ninput TransferPlaybackInput {\n  \"\"\"\n  A list containing the ID of the device on which playback should be\n  started/transferred.\n  \"\"\"\n  deviceIds: [ID!]!\n\n  \"\"\"\n  `true`: ensure playback happens on new device.\n  `false` or not provided: keep the current playback state.\n  \"\"\"\n  play: Boolean\n}\n\ntype TransferPlaybackPayload {\n  \"\"\"The state of playback after transferring devices.\"\"\"\n  playbackState: PlaybackState\n}\n\ninput UpdateFieldConfigInput {\n  config: FieldConfigInput!\n  field: FieldInput!\n}\n\ntype UpdateFieldConfigPayload {\n  \"\"\"The updated field config\"\"\"\n  fieldConfig: FieldConfig\n}\n\n\"\"\"Public profile information about a Spotify user.\"\"\"\ntype User implements UserProfile {\n  \"\"\"\n  The [Spotify user ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for this user.\n  \"\"\"\n  id: ID!\n\n  \"\"\"The name displayed on the user's profile. `null` if not available.\"\"\"\n  displayName: String\n\n  \"\"\"Known public external URLs for this user.\"\"\"\n  externalUrls: ExternalUrl!\n\n  \"\"\"Information about the followers of this user.\"\"\"\n  followers: Followers!\n\n  \"\"\"A link to the Web API endpoint for this user.\"\"\"\n  href: String!\n\n  \"\"\"The user's profile image.\"\"\"\n  images: [Image!]\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for this user.\n  \"\"\"\n  uri: String!\n}\n\ninterface UserProfile {\n  \"\"\"\n  The [Spotify user ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for this user.\n  \"\"\"\n  id: ID!\n\n  \"\"\"The name displayed on the user's profile. `null` if not available.\"\"\"\n  displayName: String\n\n  \"\"\"Information about the followers of this user.\"\"\"\n  followers: Followers!\n\n  \"\"\"A link to the Web API endpoint for this user.\"\"\"\n  href: String!\n\n  \"\"\"The user's profile image.\"\"\"\n  images: [Image!]\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for this user.\n  \"\"\"\n  uri: String!\n}\n"}}}}}}